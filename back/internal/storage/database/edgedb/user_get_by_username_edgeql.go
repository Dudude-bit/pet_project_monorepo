// Code generated by github.com/edgedb/edgedb-go/cmd/edgeql-go DO NOT EDIT.

package edgedb

import (
	"context"
	_ "embed"

	"github.com/edgedb/edgedb-go"
)

//go:embed user_get_by_username.edgeql
var userGetByUsernameCmd string

// userGetByUsernameResult
// is part of the return type for
// userGetByUsername()
type userGetByUsernameResult struct {
	id       edgedb.UUID `edgedb:"id"`
	username string      `edgedb:"username"`
	email    string      `edgedb:"email"`
	password string      `edgedb:"password"`
}

// userGetByUsername
// runs the query found in
// user_get_by_username.edgeql
func userGetByUsername(
	ctx context.Context,
	client *edgedb.Client,
	username string,
) (userGetByUsernameResult, error) {
	var result userGetByUsernameResult

	err := client.QuerySingle(
		ctx,
		userGetByUsernameCmd,
		&result,
		map[string]interface{}{
			"username": username,
		},
	)

	return result, err
}

// userGetByUsernameJSON
// runs the query found in
// user_get_by_username.edgeql
// returning the results as json encoded bytes
func userGetByUsernameJSON(
	ctx context.Context,
	client *edgedb.Client,
	username string,
) ([]byte, error) {
	var result []byte

	err := client.QuerySingleJSON(
		ctx,
		userGetByUsernameCmd,
		&result,
		map[string]interface{}{
			"username": username,
		},
	)
	if err != nil {
		return nil, err
	}

	return result, nil
}
