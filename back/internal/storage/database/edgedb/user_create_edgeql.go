// Code generated by github.com/edgedb/edgedb-go/cmd/edgeql-go DO NOT EDIT.

package edgedb

import (
	"context"
	_ "embed"

	"github.com/edgedb/edgedb-go"
)

//go:embed user_create.edgeql
var userCreateCmd string

// userCreateResult
// is part of the return type for
// userCreate()
type userCreateResult struct {
	username string `edgedb:"username"`
	email    string `edgedb:"email"`
}

// userCreate
// runs the query found in
// user_create.edgeql
func userCreate(
	ctx context.Context,
	client *edgedb.Client,
	username string,
	password string,
	email string,
) (userCreateResult, error) {
	var result userCreateResult

	err := client.QuerySingle(
		ctx,
		userCreateCmd,
		&result,
		map[string]interface{}{
			"username": username,
			"password": password,
			"email":    email,
		},
	)

	return result, err
}

// userCreateJSON
// runs the query found in
// user_create.edgeql
// returning the results as json encoded bytes
func userCreateJSON(
	ctx context.Context,
	client *edgedb.Client,
	username string,
	password string,
	email string,
) ([]byte, error) {
	var result []byte

	err := client.QuerySingleJSON(
		ctx,
		userCreateCmd,
		&result,
		map[string]interface{}{
			"username": username,
			"password": password,
			"email":    email,
		},
	)
	if err != nil {
		return nil, err
	}

	return result, nil
}
