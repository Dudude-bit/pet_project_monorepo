// Code generated by github.com/edgedb/edgedb-go/cmd/edgeql-go DO NOT EDIT.

package edgedb

import (
	"context"
	_ "embed"

	"github.com/edgedb/edgedb-go"
)

//go:embed user_get.edgeql
var userGetCmd string

// userGetResult
// is part of the return type for
// userGet()
type userGetResult struct {
	username string `edgedb:"username"`
	email    string `edgedb:"email"`
}

// userGet
// runs the query found in
// user_get.edgeql
func userGet(
	ctx context.Context,
	client *edgedb.Client,
	id edgedb.UUID,
) (userGetResult, error) {
	var result userGetResult

	err := client.QuerySingle(
		ctx,
		userGetCmd,
		&result,
		map[string]interface{}{
			"id": id,
		},
	)

	return result, err
}

// userGetJSON
// runs the query found in
// user_get.edgeql
// returning the results as json encoded bytes
func userGetJSON(
	ctx context.Context,
	client *edgedb.Client,
	id edgedb.UUID,
) ([]byte, error) {
	var result []byte

	err := client.QuerySingleJSON(
		ctx,
		userGetCmd,
		&result,
		map[string]interface{}{
			"id": id,
		},
	)
	if err != nil {
		return nil, err
	}

	return result, nil
}
